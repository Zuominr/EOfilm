/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.28
 * Generated at: 2018-03-01 20:18:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Dashboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import EOfilm.*;
import java.util.*;
import java.text.*;

public final class dashboardm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("EOfilm");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Employee Dashboard</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t");

		user userToLogin = (user) session.getAttribute("empToken");
		if (userToLogin == null) {
			response.sendRedirect( request.getContextPath()+ "/_dashboard");
			userToLogin = new user();
		}
		
		star newStar = (star)  session.getAttribute("StarAdded");
		Boolean fromStar = (Boolean) session.getAttribute("fromStarAdd");
		
		if(newStar != null && fromStar)
		{
			
      out.write("\n");
      out.write("\t<h3>");
      out.print(newStar.getName());
      out.write("\n");
      out.write("\t\twas add successfully\n");
      out.write("\t</h3>\n");
      out.write("\t");
 
		}
		else if (newStar != null)
		{

			
      out.write("\n");
      out.write("\t<h3>");
      out.print(newStar.getName());
      out.write("\n");
      out.write("\t\twas <b>not</b> add successfully\n");
      out.write("\t</h3>\n");
      out.write("\t");
 
		}
		
		String MovieAddResponse =(String)session.getAttribute("AddResult");
		if(MovieAddResponse != null)
		{
			
      out.write("\n");
      out.write("\t<h3>");
      out.print(MovieAddResponse );
      out.write("</h3>\n");
      out.write("\t");
 
		}
		session.setAttribute("AddResult", null);
		session.setAttribute("StarAdded", null);
		session.setAttribute("fromStarAdd", null);
			
	
      out.write("\n");
      out.write("\t<div align=\"center\">\n");
      out.write("\t\t<table>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td width=\"35\">&nbsp;</td>\n");
      out.write("\t\t\t\t<td>&nbsp;</td>\n");
      out.write("\t\t\t\t<td>&nbsp;</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>\n");
      out.write("\t\t\t\t\t<div align=\"center\">\n");
      out.write("\t\t\t\t\t\tHello <b>");
      out.print(userToLogin.getFirst_name());
      out.write("!</b> <br>Welcome to\n");
      out.write("\t\t\t\t\t\tEOfilm!\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t</th>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td width=\"35\">&nbsp;</td>\n");
      out.write("\t\t\t\t<td>&nbsp;</td>\n");
      out.write("\t\t\t\t<td>&nbsp;</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>\n");
      out.write("\t\t\t\t\t<form action=\"insertStar\">\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" value=\"Insert a Star into the movie Database\">\n");
      out.write("\t\t\t\t\t</form>\n");
      out.write("\t\t\t\t</th>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td width=\"35\">&nbsp;</td>\n");
      out.write("\t\t\t\t<td>&nbsp;</td>\n");
      out.write("\t\t\t\t<td>&nbsp;</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td width=\"35\">&nbsp;</td>\n");
      out.write("\t\t\t\t<td>&nbsp;</td>\n");
      out.write("\t\t\t\t<td>&nbsp;</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>\n");
      out.write("\t\t\t\t\t<form action=\"insertMovie\">\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\"\n");
      out.write("\t\t\t\t\t\t\tvalue=\"Insert a Movie into the movie Database\">\n");
      out.write("\t\t\t\t\t</form>\n");
      out.write("\t\t\t\t</th>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td width=\"35\">&nbsp;</td>\n");
      out.write("\t\t\t\t<td>&nbsp;</td>\n");
      out.write("\t\t\t\t<td>&nbsp;</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t");

				Map<String,Map<String,String>> metaData = (Map<String,Map<String,String>> )session.getAttribute("metaData");
			if(metaData == null)
			{
			
      out.write("\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th>\n");
      out.write("\t\t\t\t\t<form action=\"dashboardFunctions\">\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" name=\"submit\"\n");
      out.write("\t\t\t\t\t\t\tvalue=\"Provide the metadata of the database\">\n");
      out.write("\t\t\t\t\t</form>\n");
      out.write("\t\t\t\t</th>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t");

			}
			
      out.write("\n");
      out.write("\t\t</table>\n");
      out.write("\t\t");

		if(metaData != null)
			{
		
      out.write("\n");
      out.write("\t\t<h3>Database Metadata</h3>\n");
      out.write("\t\t");

		for(String tableName : metaData.keySet())
		{
		
      out.write("\n");
      out.write("\t\t<h4>\n");
      out.write("\t\t\tTable:\n");
      out.write("\t\t\t");
      out.print(tableName );
      out.write("</h4>\n");
      out.write("\t\t<table>\n");
      out.write("\t\t\t");
for(String rowName : metaData.get(tableName).keySet()) 
		{
		
      out.write("\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>");
      out.print(rowName );
      out.write("</td>\n");
      out.write("\t\t\t\t<td>");
      out.print(metaData.get(tableName).get(rowName) );
      out.write("</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t");

			}
		
      out.write("\n");
      out.write("\t\t</table>\n");
      out.write("\t\t");

			}
			
      out.write('\n');
      out.write('	');
      out.write('	');

			}
			
      out.write("\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
